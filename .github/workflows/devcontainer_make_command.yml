#  Copyright (c) University College London Hospitals NHS Foundation Trust
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
---
name: Make command

on:
  workflow_call:
    inputs:
      command:
        type: string
        required: true
        description: Make command to run e.g bootstrap
      environment:
        type: string
        required: true
        description: The GitHub environment in which to run
      suffix_override:
        type: string
        required: false
        description: An override for the naming suffix. If defined the core address space is random
      sha:
        type: string
        required: false
        description: Commit SHA to override the default GitHub checkout
    secrets:
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      DEVCONTAINER_ACR_NAME:
        required: true
      SUFFIX:
        required: true
      LOCATION:
        required: true
      ORG_GH_TOKEN:
        required: true
      DATA_SOURCE_CONNECTIONS:
        required: false
        # default: "[]"

jobs:
  make_core:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      dc_tag: ${{ steps.dc.outputs.tag }}
      dc_image_path: ${{ steps.dc.outputs.image }}
      dc_runner_name: ${{ steps.dc.outputs.runner_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # if the following values are missing (i.e. not triggered via comment workflow)
          # then the default checkout will apply
          ref: ${{ inputs.sha }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR Login
        id: acr_login
        continue-on-error: true  # ACR may not exist yet
        run: |
          az acr login --name "${{ secrets.DEVCONTAINER_ACR_NAME }}"

      - name: Set devcontainer attributes
        id: dc
        run: |
          echo "tag=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          echo "image_path=${{ secrets.DEVCONTAINER_ACR_NAME }}.azurecr.io/flowehr/devcontainer" >> $GITHUB_OUTPUT
          echo "runner_name=dc-${{ (inputs.suffix_override != '' && inputs.suffix_override) || inputs.environment }}" >> $GITHUB_OUTPUT

      - name: Bootstrap
        uses: devcontainers/ci@v0.2
        env:
          ORG_GH_TOKEN: "${{ secrets.ORG_GH_TOKEN }}"
        with:
          imageName: ${{ steps.dc.outputs.image_path }}
          cacheFrom: ${{ steps.dc.outputs.image_path }}
          imageTag: ${{ steps.dc.outputs.tag }}
          runCmd: make bootstrap
          # Push is manual otherwise the post step command doesn't execute before core deploy
          push: never
          env: |
            DOCKER_BUILDKIT=1
            TF_IN_AUTOMATION=1
            ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
            ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
            ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
            SUFFIX=${{ (inputs.suffix_override != '' && inputs.suffix_override) || secrets.SUFFIX }}
            LOCATION=${{ secrets.LOCATION }}
            ENVIRONMENT=${{ inputs.environment }}
            DEVCONTAINER_ACR_NAME=${{ secrets.DEVCONTAINER_ACR_NAME }}

      - name: Push devcontainer
        run: |
          docker push ${{ steps.dc.outputs.image_path }}:${{ steps.dc.outputs.tag }}

      - name: Deploy core and build agent
        uses: devcontainers/ci@v0.2
        with:
          imageName: ${{ steps.dc.outputs.image_path }}
          imageTag: ${{ steps.dc.outputs.tag }}
          runCmd: make deploy-core
          push: never
          env: |
            DOCKER_BUILDKIT=1
            TF_INPUT=0
            TF_IN_AUTOMATION=1
            ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
            ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
            ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
            SUFFIX=${{ (inputs.suffix_override != '' && inputs.suffix_override) || secrets.SUFFIX }}
            LOCATION=${{ secrets.LOCATION }}
            ENVIRONMENT=${{ inputs.environment }}
            DEVCONTAINER_ACR_NAME=${{ secrets.DEVCONTAINER_ACR_NAME }}
            DEVCONTAINER_IMAGE_NAME=flowehr/devcontainer
            DEVCONTAINER_TAG=${{ steps.dc.outputs.tag }}
            ORG_GH_TOKEN=${{ secrets.ORG_GH_TOKEN }}
            DATA_SOURCE_CONNECTIONS=${{ (secrets.DATA_SOURCE_CONNECTIONS != '' && secrets.DATA_SOURCE_CONNECTIONS) || '[]' }}
            USE_RANDOM_ADDRESS_SPACE=${{ (inputs.suffix_override != '' && '1') || '0' }}
            LOCAL_MODE=false
            GITHUB_RUNNER_NAME=${{ steps.dc.outputs.runner_name }}
            GITHUB_RUNNER_TOKEN=${{ secrets.GH_RUNNER_CREATE_TOKEN }}
            GITHUB_REPOSITORY=${{ github.repository }}

  make:
    if: ${{ inputs.command }} != 'deploy-core'
    needs: [make_core]
    runs-on: ${{ needs.make_core.outputs.dc_runner_name }}
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # if the following values are missing (i.e. not triggered via comment workflow)
          # then the default checkout will apply
          ref: ${{ inputs.sha }}

      - name: Deploy
        env:
          DOCKER_BUILDKIT: 1
          TF_INPUT: 0
          TF_IN_AUTOMATION: 1
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          SUFFIX: ${{ (inputs.suffix_override != '' && inputs.suffix_override) || secrets.SUFFIX }}
          LOCATION: ${{ secrets.LOCATION }}
          ENVIRONMENT: ${{ inputs.environment }}
          DEVCONTAINER_ACR_NAME: ${{ secrets.DEVCONTAINER_ACR_NAME }}
          DEVCONTAINER_IMAGE_IMAGE: flowehr/devcontainer
          DEVCONTAINER_TAG: ${{ needs.make_core.outputs.dc_tag }}
          ORG_GH_TOKEN: ${{ secrets.ORG_GH_TOKEN }}
          LOCAL_MODE: false
        run: make ${{ inputs.command }}
